<?php
namespace frontend\controllers;

use app\models\BvMyOrders;
use Yii;
use yii\filters\VerbFilter;
use yii\helpers\Json;
use yii\web\HttpException;

/**
 * Api controller
 */
class ApiController extends \yii\web\Controller
{
    public $enableCsrfValidation = false;

//    public function behaviors()
//    {
//        return [
//            'verbs' => [
//                'class' => VerbFilter::class,
//                'actions' => [
//                    'create-wxpay-order' => ['post'],
//                ],
//            ],
//        ];
//    }

    public function beforeAction($action)
    {
        $this->layout = false;
        return parent::beforeAction($action); // TODO: Change the autogenerated stub
    }

    public function actionCreateWxpayOrder()
    {
        file_put_contents('post.log', print_r($_POST, true));
        if (trim(Yii::$app->request->post('flag')) !== 'bk') {
            return $this->toJson([
                    'success' => false,
                    'info' => '非法请求',
                ]);
        }
        $uid = (int)Yii::$app->request->post('uid');
        $post_id = (int)Yii::$app->request->post('post_id');
        $price = (int)Yii::$app->request->post('price');

        $order = new BvMyOrders();
        $order->setAttributes([
            'uid' => $uid,
            'post_id' => $post_id,
            'price' => $price,
        ]);
        if (!$order->save()) {
            return $this->toJson([
                'success' => false,
                'info' => current($order->getFirstErrors()),
            ]);
        }

        return $this->renderContent('{"success": false}');
    }

    private function toJson($array)
    {
        return Json::encode($array);
    }


}
